webpackJsonp([1],{371:function(n,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=e(0),o=e.n(r),a=e(6),i=(e.n(a),e(433)),s=e(45),c=e(20),u=e(46),d={container:e.i(a.css)({width:300,minWidth:"90%"}),downloadButtons:e.i(a.css)({display:"flex","& > div":{flex:1,"&:nth-child(1)":{paddingRight:2},"&:nth-last-child(1)":{paddingLeft:2}},"& button":{padding:20,"& p":{marginBottom:0,"& > span":{fontWeight:"bold"}}}})},l=function(n){var t=n.network,r=n.node,o=n.format;return function(n){e.i(i.a)({network:t,nodeId:r.id},o),e.i(u.d)()}};t.default=function(n){return o.a.createElement("div",{className:d.container},o.a.createElement("div",{className:d.downloadButtons},o.a.createElement("div",null,o.a.createElement(s.a,{onClick:l(Object.assign({},n,{format:"arduino"}))},o.a.createElement(c.i,null),o.a.createElement("p",null,"Download for ",o.a.createElement("span",null,"Arduino IDE")))),o.a.createElement("div",null,o.a.createElement(s.a,{onClick:l(Object.assign({},n,{format:"platformio"}))},o.a.createElement(c.j,null),o.a.createElement("p",null,"Download for ",o.a.createElement("span",null,"PlatformIO"))))))}},432:function(n,t,e){"use strict";function r(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}e.d(t,"a",function(){return u}),e.d(t,"b",function(){return d});var o=e(9),a=e(434),i=e(160),s=function(n){var t=n.key;return JSON.parse(window.localStorage.getItem(t)).text},c="\nInstructions to flash your node:\n\ntl;dr:\n* Flash the SecurityPersonalizer to your node first.\n* Then flash the main sketch next.\n\nDetails:\nFlashing the SecurityPersonalizer sketch to your node prepares it for signing\nand encryption. It writes the necessary security keys to your node's EEPROM\n(in case of software signing) or to the ATSHA204 (in case you are using the\nATSHA204 chip). This ensures that your sensor data isn't visible to your\nneighbours, and that snoopers can't snoop.\n".trim(),u=function(n){var t=n.network.nodes.find(function(t){return t.id===n.nodeId}).name.trim();return[{path:t+"/README.md",contents:c}].concat(r(o.a.map(function(r){return{path:t+"/SecurityPersonalizer/"+r.name,contents:"sp-ino"===r.key?e.i(a.a)(n,s(r)):s(r)}})),r(o.b.map(function(n){return{path:t+"/"+t+"/"+n.name,contents:s(n)}})),r(e.i(i.a)(n,t).map(function(n){return{path:t+"/"+t+"/"+n.name,contents:n.contents}})))},d=function(n){var t=n.network.nodes.find(function(t){return t.id===n.nodeId}).name.trim();return[{path:t+"/README.md",contents:c}].concat(r(o.a.map(function(r){return{path:t+"/SecurityPersonalizer/src/"+r.name,contents:"sp-ino"===r.key?e.i(a.a)(n,s(r)):s(r)}})),[{path:t+"/SecurityPersonalizer/platformio.ini",contents:e.i(a.b)()}],r(o.b.map(function(n){return{path:t+"/"+t+"/src/"+n.name,contents:s(n)}})),r(e.i(i.a)(n,t).map(function(n){return{path:t+"/"+t+"/src/"+n.name,contents:n.contents}})),[{path:t+"/"+t+"/platformio.ini",contents:e.i(i.b)(n)}])}},433:function(n,t,e){"use strict";var r=e(432);t.a=function(n,t){return e.e(2).then(e.bind(null,431)).then(function(e){var o=e.JSZip,a=e.saveAs,i=new o;return("arduino"===t?r.a:r.b)(n).forEach(function(n){var t=n.path,e=n.contents;return i.file(t,e)}),i.generateAsync({type:"blob"}).then(function(t){return a(t,n.network.nodes.find(function(t){return t.id===n.nodeId}).name.trim()+"-"+n.nodeId)})})}},434:function(n,t,e){"use strict";e.d(t,"b",function(){return o});var r=function(n){return n.match(/.{2}/g).map(function(n){return"0x"+n}).join()};t.a=function(n,t){var e=n.network,o=n.nodeId,a=e.nodes.find(function(n){return n.id===o});return t.split("\n").map(function(n){return n.trim().startsWith("#define MY_HMAC_KEY")?"#define MY_HMAC_KEY "+r(e.hmac):n.trim().startsWith("#define MY_AES_KEY")?"#define MY_AES_KEY "+r(e.aes):n.trim().startsWith("#define MY_SOFT_SERIAL")?"#define MY_SOFT_SERIAL "+r(a.key):"//#define PERSONALIZE_SOFT"===n.trim()&&"software"===a.signing?"#define PERSONALIZE_SOFT":"//#define PERSONALIZE_ATSHA204A"===n.trim()&&"atsha204"===a.signing?"#define PERSONALIZE_ATSHA204A":n}).join("\n")};var o=function(){return"\n; PlatformIO Project Configuration File\n;\n;   Build options: build flags, source filter, extra scripting\n;   Upload options: custom port, speed and extra flags\n;   Library options: dependencies, extra library storages\n;\n; Please visit documentation for the other options and examples\n; http://docs.platformio.org/en/stable/projectconf.html\n\n[env:pro8MHzatmega328]\nplatform = atmelavr\nframework = arduino\nboard = pro8MHzatmega328\nlib_deps = https://github.com/mysensors/MySensors#development\n"}}});
//# sourceMappingURL=1.f419bf1f.chunk.js.map