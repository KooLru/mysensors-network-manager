{"version":3,"sources":["../static/js/1.f419bf1f.chunk.js","components/DownloadDialog.js","sketch-generator/files-by-format.js","sketch-generator/index.js","sketch-generator/security-personalizer.js"],"names":["webpackJsonp","371","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_glamor__","__WEBPACK_IMPORTED_MODULE_2__sketch_generator__","__WEBPACK_IMPORTED_MODULE_3__Buttons__","__WEBPACK_IMPORTED_MODULE_4__Icons__","__WEBPACK_IMPORTED_MODULE_5__Modal__","styles","container","i","width","minWidth","downloadButtons","display","& > div","flex","&:nth-child(1)","paddingRight","&:nth-last-child(1)","paddingLeft","& button","padding","& p","marginBottom","& > span","fontWeight","onButtonClick","_ref","network","node","format","e","nodeId","id","props","a","createElement","className","onClick","432","_toConsumableArray","arr","Array","isArray","arr2","length","from","d","arduino","platformio","__WEBPACK_IMPORTED_MODULE_0__lib_constants__","__WEBPACK_IMPORTED_MODULE_1__security_personalizer__","__WEBPACK_IMPORTED_MODULE_2__node_sketch_files__","fileContents","key","JSON","parse","window","localStorage","getItem","text","readme","trim","nodeParams","sketchName","nodes","find","name","path","contents","concat","map","file","433","__WEBPACK_IMPORTED_MODULE_0__files_by_format__","then","bind","JSZip","saveAs","zip","forEach","_ref2","generateAsync","type","content","434","platformini","convertToHex","hexString","match","x","join","split","line","startsWith","hmac","aes","signing"],"mappings":"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","file":"static/js/1.f419bf1f.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 371:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_glamor__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_glamor___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_glamor__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__sketch_generator__ = __webpack_require__(433);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Buttons__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Icons__ = __webpack_require__(20);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Modal__ = __webpack_require__(46);\n\n\n\n\n\n\n\n\n\nvar styles = {\n  container: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_glamor__[\"css\"])({\n    width: 300,\n    minWidth: '90%'\n  }),\n\n  downloadButtons: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_glamor__[\"css\"])({\n    display: 'flex',\n\n    '& > div': {\n      flex: 1,\n\n      '&:nth-child(1)': {\n        paddingRight: 2\n      },\n\n      '&:nth-last-child(1)': {\n        paddingLeft: 2\n      }\n    },\n\n    '& button': {\n      padding: 20,\n\n      '& p': {\n        marginBottom: 0,\n\n        '& > span': {\n          fontWeight: 'bold'\n        }\n      }\n    }\n  })\n};\n\nvar onButtonClick = function onButtonClick(_ref) {\n  var network = _ref.network,\n      node = _ref.node,\n      format = _ref.format;\n  return function (e) {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__sketch_generator__[\"a\" /* default */])({ network: network, nodeId: node.id }, format);\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__Modal__[\"d\" /* hide */])();\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (props) {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'div',\n    { className: styles.container },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'div',\n      { className: styles.downloadButtons },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        null,\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_3__Buttons__[\"a\" /* Button */],\n          { onClick: onButtonClick(Object.assign({}, props, { format: 'arduino' })) },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Icons__[\"i\" /* Arduino */], null),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'p',\n            null,\n            'Download for ',\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'span',\n              null,\n              'Arduino IDE'\n            )\n          )\n        )\n      ),\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        null,\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_3__Buttons__[\"a\" /* Button */],\n          { onClick: onButtonClick(Object.assign({}, props, { format: 'platformio' })) },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4__Icons__[\"j\" /* PlatformIO */], null),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'p',\n            null,\n            'Download for ',\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'span',\n              null,\n              'PlatformIO'\n            )\n          )\n        )\n      )\n    )\n  );\n});\n\n/***/ }),\n\n/***/ 432:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return arduino; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return platformio; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_constants__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__security_personalizer__ = __webpack_require__(434);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_sketch_files__ = __webpack_require__(160);\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\nvar fileContents = function fileContents(_ref) {\n  var key = _ref.key;\n  return JSON.parse(window.localStorage.getItem(key)).text;\n};\n\nvar readme = '\\nInstructions to flash your node:\\n\\ntl;dr:\\n* Flash the SecurityPersonalizer to your node first.\\n* Then flash the main sketch next.\\n\\nDetails:\\nFlashing the SecurityPersonalizer sketch to your node prepares it for signing\\nand encryption. It writes the necessary security keys to your node\\'s EEPROM\\n(in case of software signing) or to the ATSHA204 (in case you are using the\\nATSHA204 chip). This ensures that your sensor data isn\\'t visible to your\\nneighbours, and that snoopers can\\'t snoop.\\n'.trim();\n\nvar arduino = function arduino(nodeParams) {\n  var sketchName = nodeParams.network.nodes.find(function (n) {\n    return n.id === nodeParams.nodeId;\n  }).name.trim();\n\n  return [{\n    path: sketchName + '/README.md',\n    contents: readme\n  }].concat(_toConsumableArray(__WEBPACK_IMPORTED_MODULE_0__lib_constants__[\"a\" /* spFiles */].map(function (file) {\n    return {\n      path: sketchName + '/SecurityPersonalizer/' + file.name,\n      contents: file.key === 'sp-ino' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__security_personalizer__[\"a\" /* default */])(nodeParams, fileContents(file)) : fileContents(file)\n    };\n  })), _toConsumableArray(__WEBPACK_IMPORTED_MODULE_0__lib_constants__[\"b\" /* nmFiles */].map(function (file) {\n    return {\n      path: sketchName + '/' + sketchName + '/' + file.name,\n      contents: fileContents(file)\n    };\n  })), _toConsumableArray(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__node_sketch_files__[\"a\" /* default */])(nodeParams, sketchName).map(function (file) {\n    return {\n      path: sketchName + '/' + sketchName + '/' + file.name,\n      contents: file.contents\n    };\n  })));\n};\n\nvar platformio = function platformio(nodeParams) {\n  var sketchName = nodeParams.network.nodes.find(function (n) {\n    return n.id === nodeParams.nodeId;\n  }).name.trim();\n\n  return [{\n    path: sketchName + '/README.md',\n    contents: readme\n  }].concat(_toConsumableArray(__WEBPACK_IMPORTED_MODULE_0__lib_constants__[\"a\" /* spFiles */].map(function (file) {\n    return {\n      path: sketchName + '/SecurityPersonalizer/src/' + file.name,\n      contents: file.key === 'sp-ino' ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__security_personalizer__[\"a\" /* default */])(nodeParams, fileContents(file)) : fileContents(file)\n    };\n  })), [{\n    path: sketchName + '/SecurityPersonalizer/platformio.ini',\n    contents: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__security_personalizer__[\"b\" /* platformini */])()\n  }], _toConsumableArray(__WEBPACK_IMPORTED_MODULE_0__lib_constants__[\"b\" /* nmFiles */].map(function (file) {\n    return {\n      path: sketchName + '/' + sketchName + '/src/' + file.name,\n      contents: fileContents(file)\n    };\n  })), _toConsumableArray(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__node_sketch_files__[\"a\" /* default */])(nodeParams, sketchName).map(function (file) {\n    return {\n      path: sketchName + '/' + sketchName + '/src/' + file.name,\n      contents: file.contents\n    };\n  })), [{\n    path: sketchName + '/' + sketchName + '/platformio.ini',\n    contents: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__node_sketch_files__[\"b\" /* platformini */])(nodeParams)\n  }]);\n};\n\n/***/ }),\n\n/***/ 433:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__files_by_format__ = __webpack_require__(432);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (nodeParams, format) {\n  return __webpack_require__.e/* import() */(2).then(__webpack_require__.bind(null, 431)).then(function (_ref) {\n    var JSZip = _ref.JSZip,\n        saveAs = _ref.saveAs;\n\n    var zip = new JSZip();\n    (format === 'arduino' ? __WEBPACK_IMPORTED_MODULE_0__files_by_format__[\"a\" /* arduino */] : __WEBPACK_IMPORTED_MODULE_0__files_by_format__[\"b\" /* platformio */])(nodeParams).forEach(function (_ref2) {\n      var path = _ref2.path,\n          contents = _ref2.contents;\n      return zip.file(path, contents);\n    });\n\n    return zip.generateAsync({ type: \"blob\" }).then(function (content) {\n      return saveAs(content, nodeParams.network.nodes.find(function (n) {\n        return n.id === nodeParams.nodeId;\n      }).name.trim() + '-' + nodeParams.nodeId);\n    });\n  });\n});\n\n/***/ }),\n\n/***/ 434:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return platformini; });\nvar convertToHex = function convertToHex(hexString) {\n  return hexString.match(/.{2}/g).map(function (x) {\n    return '0x' + x;\n  }).join();\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (function (_ref, text) {\n  var network = _ref.network,\n      nodeId = _ref.nodeId;\n\n  var node = network.nodes.find(function (n) {\n    return n.id === nodeId;\n  });\n\n  return text.split('\\n').map(function (line) {\n    if (line.trim().startsWith('#define MY_HMAC_KEY')) {\n      return '#define MY_HMAC_KEY ' + convertToHex(network.hmac);\n    }\n\n    if (line.trim().startsWith('#define MY_AES_KEY')) {\n      return '#define MY_AES_KEY ' + convertToHex(network.aes);\n    }\n\n    if (line.trim().startsWith('#define MY_SOFT_SERIAL')) {\n      return '#define MY_SOFT_SERIAL ' + convertToHex(node.key);\n    }\n\n    if (line.trim() === '//#define PERSONALIZE_SOFT' && node.signing === 'software') {\n      return '#define PERSONALIZE_SOFT';\n    }\n\n    if (line.trim() === '//#define PERSONALIZE_ATSHA204A' && node.signing === 'atsha204') {\n      return '#define PERSONALIZE_ATSHA204A';\n    }\n\n    return line;\n  }).join('\\n');\n});\n\nvar platformini = function platformini() {\n  return '\\n; PlatformIO Project Configuration File\\n;\\n;   Build options: build flags, source filter, extra scripting\\n;   Upload options: custom port, speed and extra flags\\n;   Library options: dependencies, extra library storages\\n;\\n; Please visit documentation for the other options and examples\\n; http://docs.platformio.org/en/stable/projectconf.html\\n\\n[env:pro8MHzatmega328]\\nplatform = atmelavr\\nframework = arduino\\nboard = pro8MHzatmega328\\nlib_deps = https://github.com/mysensors/MySensors#development\\n';\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.f419bf1f.chunk.js","import React from 'react';\nimport { css } from 'glamor';\n\nimport generateSketch from '../sketch-generator';\n\nimport { Button } from './Buttons';\nimport { Arduino, PlatformIO } from './Icons';\nimport { hide } from './Modal';\n\nconst styles = {\n  container: css({\n    width: 300,\n    minWidth: '90%'\n  }),\n\n  downloadButtons: css({\n    display: 'flex',\n\n    '& > div': {\n      flex: 1,\n\n      '&:nth-child(1)': {\n        paddingRight: 2\n      },\n\n      '&:nth-last-child(1)': {\n        paddingLeft: 2\n      }\n    },\n\n    '& button': {\n      padding: 20,\n\n      '& p': {\n        marginBottom: 0,\n\n        '& > span': {\n          fontWeight: 'bold'\n        }\n      }\n    }\n  })\n};\n\nconst onButtonClick = ({ network, node, format }) => e => {\n  generateSketch({ network, nodeId: node.id }, format);\n  hide();\n}\n\nexport default props => (\n  <div className={styles.container}>\n    <div className={styles.downloadButtons}>\n      <div>\n        <Button onClick={onButtonClick({...props, format: 'arduino'})}>\n          <Arduino/>\n          <p>Download for <span>Arduino IDE</span></p>\n        </Button>\n      </div>\n      <div>\n        <Button onClick={onButtonClick({...props, format: 'platformio'})}>\n          <PlatformIO />\n          <p>Download for <span>PlatformIO</span></p>\n        </Button>\n      </div>\n    </div>\n  </div>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/DownloadDialog.js","import { spFiles, nmFiles } from '../lib/constants';\nimport securityPersonalizer, { platformini as spPlatformini } from './security-personalizer';\nimport nodeSketchFiles, { platformini as nodePlatformini } from './node-sketch-files';\n\nconst fileContents = ({ key }) => JSON.parse(window.localStorage.getItem(key)).text;\n\nconst readme = `\nInstructions to flash your node:\n\ntl;dr:\n* Flash the SecurityPersonalizer to your node first.\n* Then flash the main sketch next.\n\nDetails:\nFlashing the SecurityPersonalizer sketch to your node prepares it for signing\nand encryption. It writes the necessary security keys to your node's EEPROM\n(in case of software signing) or to the ATSHA204 (in case you are using the\nATSHA204 chip). This ensures that your sensor data isn't visible to your\nneighbours, and that snoopers can't snoop.\n`.trim();\n\nexport const arduino = nodeParams => {\n  const sketchName = nodeParams.network.nodes.find(n => n.id === nodeParams.nodeId).name.trim();\n\n  return [\n    {\n      path: `${sketchName}/README.md`,\n      contents: readme\n    },\n    ...spFiles.map(file => ({\n      path: `${sketchName}/SecurityPersonalizer/${file.name}`,\n      contents: (\n        file.key === 'sp-ino'\n        ? securityPersonalizer(nodeParams, fileContents(file))\n        : fileContents(file)\n      )\n    })),\n    ...nmFiles.map(file => ({\n      path: `${sketchName}/${sketchName}/${file.name}`,\n      contents: fileContents(file)\n    })),\n    ...nodeSketchFiles(nodeParams, sketchName).map(file => ({\n      path: `${sketchName}/${sketchName}/${file.name}`,\n      contents: file.contents\n    }))\n  ];\n}\n\nexport const platformio = nodeParams => {\n  const sketchName = nodeParams.network.nodes.find(n => n.id === nodeParams.nodeId).name.trim();\n\n  return [\n    {\n      path: `${sketchName}/README.md`,\n      contents: readme\n    },\n    ...spFiles.map(file => ({\n      path: `${sketchName}/SecurityPersonalizer/src/${file.name}`,\n      contents: (\n        file.key === 'sp-ino'\n        ? securityPersonalizer(nodeParams, fileContents(file))\n        : fileContents(file)\n      )\n    })),\n    {\n      path: `${sketchName}/SecurityPersonalizer/platformio.ini`,\n      contents: spPlatformini()\n    },\n    ...nmFiles.map(file => ({\n      path: `${sketchName}/${sketchName}/src/${file.name}`,\n      contents: fileContents(file)\n    })),\n    ...nodeSketchFiles(nodeParams, sketchName).map(file => ({\n      path: `${sketchName}/${sketchName}/src/${file.name}`,\n      contents: file.contents\n    })),\n    {\n      path: `${sketchName}/${sketchName}/platformio.ini`,\n      contents: nodePlatformini(nodeParams)\n    }\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch-generator/files-by-format.js","import { arduino, platformio }  from './files-by-format';\n\nexport default (nodeParams, format) =>\n  import('../lib/file-utils')\n    .then(({ JSZip, saveAs }) => {\n      const zip = new JSZip();\n      (\n        format === 'arduino'\n        ? arduino\n        : platformio\n      )(nodeParams)\n        .forEach(({path, contents}) => zip.file(path, contents));\n\n      return zip\n        .generateAsync({type:\"blob\"})\n        .then(content => saveAs(content, `${nodeParams.network.nodes.find(n => n.id === nodeParams.nodeId).name.trim()}-${nodeParams.nodeId}`));\n    })\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch-generator/index.js","const convertToHex = hexString => hexString.match(/.{2}/g).map(x => `0x${x}`).join();\n\nexport default ({ network, nodeId }, text) => {\n  const node = network.nodes.find(n => n.id === nodeId);\n\n  return text\n    .split('\\n')\n    .map(line => {\n      if(line.trim().startsWith('#define MY_HMAC_KEY')) {\n        return `#define MY_HMAC_KEY ${convertToHex(network.hmac)}`;\n      }\n\n      if(line.trim().startsWith('#define MY_AES_KEY')) {\n        return `#define MY_AES_KEY ${convertToHex(network.aes)}`;\n      }\n\n      if(line.trim().startsWith('#define MY_SOFT_SERIAL')) {\n        return `#define MY_SOFT_SERIAL ${convertToHex(node.key)}`;\n      }\n\n      if(line.trim() === '//#define PERSONALIZE_SOFT' && node.signing === 'software') {\n        return `#define PERSONALIZE_SOFT`;\n      }\n\n      if(line.trim() === '//#define PERSONALIZE_ATSHA204A' && node.signing === 'atsha204') {\n        return `#define PERSONALIZE_ATSHA204A`;\n      }\n\n      return line;\n    })\n    .join('\\n');\n};\n\nexport const platformini = () => `\n; PlatformIO Project Configuration File\n;\n;   Build options: build flags, source filter, extra scripting\n;   Upload options: custom port, speed and extra flags\n;   Library options: dependencies, extra library storages\n;\n; Please visit documentation for the other options and examples\n; http://docs.platformio.org/en/stable/projectconf.html\n\n[env:pro8MHzatmega328]\nplatform = atmelavr\nframework = arduino\nboard = pro8MHzatmega328\nlib_deps = https://github.com/mysensors/MySensors#development\n`\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch-generator/security-personalizer.js"],"sourceRoot":""}